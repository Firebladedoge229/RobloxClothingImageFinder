name: Build and Release

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        pip install pyinstaller
        pip install requests

    - name: Build executable
      run: |
        if [ ${{ matrix.os }} == 'windows-latest' ]; then
          pyinstaller --onefile clothing.py
        elif [ ${{ matrix.os }} == 'macos-latest' ]; then
          pyinstaller --onefile --osx-bundle-identifier=com.example.clothing clothing.py
        else
          pyinstaller --onefile clothing.py
        fi

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Release ${{ github.run_number }}
        body: |
          Github Actions Release
        draft: true
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: |
          ${{ matrix.os == 'windows-latest' && './dist/clothing.exe' || './dist/clothing' }}
        asset_name: |
          ${{ matrix.os == 'windows-latest' && 'clothing.exe' || 'clothing' }}
        asset_content_type: application/octet-stream
